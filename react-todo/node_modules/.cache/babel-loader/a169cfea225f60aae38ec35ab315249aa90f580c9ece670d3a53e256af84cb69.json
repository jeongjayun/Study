{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjayun/workspace/React-workspace/to-do-list/src/App.js\";\nimport React, { Component } from \"react\";\nimport ToDoListTemplate from \"./components/ToDoListTemplate\";\nimport Form from \"./components/Form\";\nimport ToDoItemList from \"./components/ToDoItemList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.id = 3;\n    //이미 0,1,2 존재하므로 3으로 설정\n    this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: ' 리액트 소개',\n        checked: false\n      }, {\n        id: 1,\n        text: ' 리액트 소개',\n        checked: true\n      }, {\n        id: 2,\n        text: ' 리액트 소개',\n        checked: false\n      }]\n    };\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value // input 의 다음 바뀔 값\n      });\n    };\n    this.handleCreate = () => {\n      const {\n        input,\n        todos\n      } = this.state;\n      this.setState({\n        input: '',\n        // 인풋 비우고\n        // concat 을 사용하여 배열에 추가\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          checked: false\n        })\n      });\n    };\n    this.handleKeyPress = e => {\n      // 눌려진 키가 Enter 면 handleCreate 호출\n      if (e.key === 'Enter') {\n        this.handleCreate();\n      }\n    };\n  }\n  render() {\n    const {\n      input,\n      todos\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress\n    } = this;\n    return /*#__PURE__*/_jsxDEV(TodoListTemplate, {\n      form: /*#__PURE__*/_jsxDEV(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(TodoItemList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ToDoListTemplate","Form","ToDoItemList","jsxDEV","_jsxDEV","App","constructor","arguments","id","state","input","todos","text","checked","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","render","TodoListTemplate","form","onKeyPress","onChange","onCreate","fileName","_jsxFileName","lineNumber","columnNumber","children","TodoItemList"],"sources":["/Users/jeongjayun/workspace/React-workspace/to-do-list/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ToDoListTemplate from \"./components/ToDoListTemplate\";\nimport Form from \"./components/Form\";\nimport ToDoItemList from \"./components/ToDoItemList\";\n\nclass App extends Component {\n\n  id=3//이미 0,1,2 존재하므로 3으로 설정\n\n  state={\n    input: '',\n    todos:[\n      { id: 0, text: ' 리액트 소개', checked: false },\n      { id: 1, text: ' 리액트 소개', checked: true },\n      { id: 2, text: ' 리액트 소개', checked: false }\n    ]\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value // input 의 다음 바뀔 값\n    });\n  }\n\n  handleCreate = () => {\n    const { input, todos } = this.state;\n    this.setState({\n      input: '', // 인풋 비우고\n      // concat 을 사용하여 배열에 추가\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false\n      })\n    });\n  }\n\n  handleKeyPress = (e) => {\n    // 눌려진 키가 Enter 면 handleCreate 호출\n    if(e.key === 'Enter') {\n      this.handleCreate();\n    }\n  }\n\n  render() {\n    const { input, todos } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress\n    } = this;\n\n    return (\n      <TodoListTemplate form={(\n        <Form \n          value={input}\n          onKeyPress={handleKeyPress}\n          onChange={handleChange}\n          onCreate={handleCreate}\n        />\n      )}>\n        <TodoItemList todos={todos}/>\n      </TodoListTemplate>\n    );\n  }\n}\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,GAAG,SAASN,SAAS,CAAC;EAAAO,YAAA;IAAA,SAAAC,SAAA;IAAA,KAE1BC,EAAE,GAAC,CAAC;IAAA;IAAA,KAEJC,KAAK,GAAC;MACJC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAC,CACJ;QAAEH,EAAE,EAAE,CAAC;QAAEI,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAM,CAAC,EAC1C;QAAEL,EAAE,EAAE,CAAC;QAAEI,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAK,CAAC,EACzC;QAAEL,EAAE,EAAE,CAAC;QAAEI,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAM,CAAC;IAE9C,CAAC;IAAA,KAEDC,YAAY,GAAIC,CAAC,IAAK;MACpB,IAAI,CAACC,QAAQ,CAAC;QACZN,KAAK,EAAEK,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDC,YAAY,GAAG,MAAM;MACnB,MAAM;QAAET,KAAK;QAAEC;MAAM,CAAC,GAAG,IAAI,CAACF,KAAK;MACnC,IAAI,CAACO,QAAQ,CAAC;QACZN,KAAK,EAAE,EAAE;QAAE;QACX;QACAC,KAAK,EAAEA,KAAK,CAACS,MAAM,CAAC;UAClBZ,EAAE,EAAE,IAAI,CAACA,EAAE,EAAE;UACbI,IAAI,EAAEF,KAAK;UACXG,OAAO,EAAE;QACX,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDQ,cAAc,GAAIN,CAAC,IAAK;MACtB;MACA,IAAGA,CAAC,CAACO,GAAG,KAAK,OAAO,EAAE;QACpB,IAAI,CAACH,YAAY,CAAC,CAAC;MACrB;IACF,CAAC;EAAA;EAEDI,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEb,KAAK;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACF,KAAK;IACnC,MAAM;MACJK,YAAY;MACZK,YAAY;MACZE;IACF,CAAC,GAAG,IAAI;IAER,oBACEjB,OAAA,CAACoB,gBAAgB;MAACC,IAAI,eACpBrB,OAAA,CAACH,IAAI;QACHiB,KAAK,EAAER,KAAM;QACbgB,UAAU,EAAEL,cAAe;QAC3BM,QAAQ,EAAEb,YAAa;QACvBc,QAAQ,EAAET;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CACD;MAAAC,QAAA,eACA7B,OAAA,CAAC8B,YAAY;QAACvB,KAAK,EAAEA;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAEvB;AACF;AACA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}